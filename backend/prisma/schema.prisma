generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int             @id @default(autoincrement())
  name         String
  email        String          @unique
  passwordHash String
  role         Role            @default(DEVELOPER)
  createdAt    DateTime        @default(now())
  projects     ProjectMember[]
  // relation name matches Task.assignee @relation("UserTasks")
  tasks        Task[]          @relation("UserTasks")
  comments     Comment[]
}

model Project {
  id          Int             @id @default(autoincrement())
  name        String
  description String?
  startDate   DateTime?
  endDate     DateTime?
  status      ProjectStatus   @default(ACTIVE)
  members     ProjectMember[]
  tasks       Task[]
  // opposite relation for UserStory.project
  userStories UserStory[]
  createdAt   DateTime        @default(now())
}

model ProjectMember {
  id        Int     @id @default(autoincrement())
  project   Project @relation(fields: [projectId], references: [id])
  projectId Int
  user      User    @relation(fields: [userId], references: [id])
  userId    Int
  role      String // e.g., "Manager" or "Developer"
}

model Task {
  id          Int        @id @default(autoincrement())
  title       String
  description String?
  status      TaskStatus @default(TODO)
  // relation name matches User.tasks @relation("UserTasks")
  assignee    User?      @relation("UserTasks", fields: [assigneeId], references: [id])
  assigneeId  Int?
  project     Project    @relation(fields: [projectId], references: [id])
  projectId   Int
  dueDate     DateTime?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  comments    Comment[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  task      Task     @relation(fields: [taskId], references: [id])
  taskId    Int
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
  message   String
  createdAt DateTime @default(now())
}

model UserStory {
  id        Int      @id @default(autoincrement())
  project   Project  @relation(fields: [projectId], references: [id])
  projectId Int
  text      String
  createdAt DateTime @default(now())
}

enum Role {
  ADMIN
  MANAGER
  DEVELOPER
}

enum TaskStatus {
  TODO
  IN_PROGRESS
  DONE
}

enum ProjectStatus {
  ACTIVE
  ON_HOLD
  COMPLETED
}
